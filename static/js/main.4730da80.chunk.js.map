{"version":3,"sources":["index.js"],"names":["Square","_this","this","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","onClick","props","style","highlightSquare","value","React","Component","Board","i","_this2","winningSquares","includes","color","undefined","squares","renderSquare","Game","_this3","Object","_home_benedict_www_references_ticTacToeReact_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_home_benedict_www_references_ticTacToeReact_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_benedict_www_references_ticTacToeReact_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","highlightStyle","fontWeight","state","history","Array","fill","change","winner","xIsNext","stepNumber","step","setState","slice","length","calculateWinner","concat","status","_this4","current","moves","map","move","highlightCurrent","desc","player","column","Number","parseInt","row","movedesc","key","jumpTo","paddingLeft","cause","handleClick","lines","_lines$i","_home_benedict_www_references_ticTacToeReact_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4730da80.chunk.js","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\n\nclass Square extends React.Component {\n    render() {\n        return (\n            <button className=\"square\" onClick={() => this.props.onClick()} style={this.props.highlightSquare}>\n                {this.props.value}\n            </button>\n        );\n    }\n}\n\nclass Board extends React.Component {\n    renderSquare(i) {\n        let highlightSquare = (this.props.winningSquares && this.props.winningSquares.includes(i)) ? {color: '#f22'} : undefined\n        return <Square\n            value={this.props.squares[i]}\n            onClick={() => this.props.onClick(i)}\n            highlightSquare={highlightSquare}\n        />;\n    }\n\n\n\n    render() {\n        return (\n            <div>\n                <div className=\"board-row\">\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Game extends React.Component {\n    highlightStyle = {fontWeight: 'bold',color:'#cc2222'}\n    constructor(props) {\n        super(props)\n        this.state = {\n            history: [{\n                squares: Array(9).fill(null), \n                change: null,\n                winner: null\n            }],\n            xIsNext: true,\n            stepNumber: 0\n        }\n    }\n    jumpTo(step) {\n        this.setState({\n            stepNumber: step,\n            xIsNext: (step % 2) === 0\n        })\n    }\n\n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1)\n        const current = history[history.length - 1]\n        const squares = current.squares.slice()\n\n        if (calculateWinner(squares) || squares[i]) {\n            return\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O'\n        this.setState({\n            history: history.concat([{\n                squares: squares,\n                change: i\n            }]),\n            xIsNext: !this.state.xIsNext,\n            stepNumber: history.length\n        })\n    }\n    render() {\n        const history = this.state.history\n        const current = history[this.state.stepNumber]\n        const winner = calculateWinner(current.squares)\n        \n\n        const moves = history.map((step, move) => {\n            const highlightCurrent = this.state.stepNumber === move ? this.highlightStyle : undefined\n            const desc = move ?\n                'Go to move ' + move :\n                'Go to Game Start'\n            const player = (move % 2) === 0 ? 'O' : 'X' \n            const column = Number.parseInt( step.change / 3 ) + 1\n            const row = (step.change%3) + 1\n            const movedesc = move ? \n                \"Player \" + player + \" on \" + column + ',' + row\n                : \n                undefined\n            return (\n                <li key={move} style={highlightCurrent}>\n                    <button onClick={() => this.jumpTo(move)} style={highlightCurrent}>\n                        {desc}\n                    </button>\n                    <span style={ {paddingLeft: '1em'} }> {movedesc} </span> \n                </li>\n            )\n        })\n\n        let status, winningSquares\n        if (winner) {\n            status = 'Winner: ' + winner.player\n            winningSquares = winner.cause\n        } else {\n            if (history.length === 10) {\n                status = \"The Players Draw\"\n            } else {\n                status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O')\n            }\n        }\n\n\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\" >\n                    <Board\n                        squares={current.squares}\n                        onClick={(i) => this.handleClick(i)}\n                        winningSquares={winningSquares}\n                    />\n                </div>\n                <div className=\"game-info\">\n                    <div>{status}</div>\n                    <ol>{moves}</ol>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return {\n                player: squares[a],\n                cause: [a,b,c]\n            }\n        }\n    }\n    return null;\n}\n// ========================================\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}